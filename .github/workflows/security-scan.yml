name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan weekly
    - cron: '0 2 * * 1'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: npm audit --audit-level=moderate --json > npm-audit.json || echo "Audit completed"
      
    - name: Run npm audit fix check
      run: npm audit fix --dry-run || echo "No fixes available"
      
    - name: Check for exposed environment variables
      run: |
        echo "Checking for exposed environment variables..."
        # Only check for non-public env vars that might be exposed
        if find . -type f \( -name "*.ts" -o -name "*.tsx" -o -name "*.js" -o -name "*.jsx" \) -not -path "./node_modules/*" -not -path "./.git/*" -not -path "./.next/*" -not -path "./out/*" -not -path "./dist/*" -not -path "./build/*" -not -path "./functions/*" | xargs grep -l "process.env" 2>/dev/null | xargs grep -v "NEXT_PUBLIC_" | grep -v "console.log" | grep -v "NODE_ENV" | grep -v "BUILD_ID" | grep -v "SERVER_ACTIONS"; then
          echo "‚ö†Ô∏è Non-public environment variables found"
          exit 1
        else
          echo "‚úÖ Environment variables properly configured"
        fi
        
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          https://www.kauaipropertysolutions.com
        uploadArtifacts: true
        temporaryPublicStorage: true
      continue-on-error: true
      
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          npm-audit.json
          lighthouse-results/
        retention-days: 30
        
    - name: Comment PR with security findings
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          let comment = '## üîí Security Scan Results\n\n';
          
          // Check for audit results
          try {
            const auditOutput = fs.readFileSync('npm-audit.json', 'utf8');
            const audit = JSON.parse(auditOutput);
            if (audit.metadata && audit.metadata.vulnerabilities && audit.metadata.vulnerabilities.total > 0) {
              comment += `‚ö†Ô∏è **NPM Audit**: Found ${audit.metadata.vulnerabilities.total} vulnerabilities\n`;
            } else {
              comment += `‚úÖ **NPM Audit**: No vulnerabilities found\n`;
            }
          } catch (e) {
            comment += `‚ÑπÔ∏è **NPM Audit**: Scan completed\n`;
          }
          
          // Check for Lighthouse results
          if (fs.existsSync('lighthouse-results')) {
            comment += `‚úÖ **Lighthouse**: Performance and security audit completed\n`;
          }
          
          comment += '\n---\n*This comment was automatically generated by the security scan workflow.*';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          }); 